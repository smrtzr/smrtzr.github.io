"use strict";(self.webpackChunk_smrtzr_docs=self.webpackChunk_smrtzr_docs||[]).push([[300],{9507:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(4848),s=r(8453);const o={},a="Shopify",i={id:"sdk/listeners/shopify",title:"Shopify",description:"Shopify users of the Smartzer Platform can take advantage of the Smartzer SDK to listen for events that occur within the Smartzer player. This allows you to trigger actions on your Shopify store based on user interactions with the Smartzer player, most commonly an addToCart action.",source:"@site/docs/sdk/listeners/shopify.mdx",sourceDirName:"sdk/listeners",slug:"/sdk/listeners/shopify",permalink:"/sdk/listeners/shopify",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"Events",permalink:"/sdk/listeners/analytics/events"},next:{title:"API",permalink:"/api"}},d={},c=[{value:"Add to Cart Listener",id:"add-to-cart-listener",level:2},{value:"Cart API",id:"cart-api",level:3},{value:"Cart UI",id:"cart-ui",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"shopify",children:"Shopify"}),"\n",(0,n.jsxs)(t.p,{children:["Shopify users of the Smartzer Platform can take advantage of the Smartzer SDK to listen for events that occur within the Smartzer player. This allows you to trigger actions on your Shopify store based on user interactions with the Smartzer player, most commonly an ",(0,n.jsx)(t.code,{children:"addToCart"})," action."]}),"\n",(0,n.jsx)(t.p,{children:"The SDK should already be included in your shopify store if you have gone through the embedding instructions after creating your first project. This can be enabled and disabled as a Shopify App Embed in your shopify store settings."}),"\n",(0,n.jsx)(t.h2,{id:"add-to-cart-listener",children:"Add to Cart Listener"}),"\n",(0,n.jsx)(t.p,{children:'The Smartzer Shopify SDK already includes a listener for an "add to cart" action, which intercepts the selected productId from the Smartzer player and attempts to add it to the Shopify Cart via the Shopify Cart API. Assuming your store uses the expected format for adding items to the cart, this API request should work out of the box. The SDK then attempts to update the cart UI elements to reflect the change.'}),"\n",(0,n.jsx)(t.h3,{id:"cart-api",children:"Cart API"}),"\n",(0,n.jsxs)(t.p,{children:["The SDK uses the product ID from the addToCart event and sends a POST request to the Shopify Cart API. The request is sent to the ",(0,n.jsx)(t.code,{children:"/cart/add.js"})," endpoint, this is the default endpoint for adding items to the cart in Shopify, and so is very unlikely to need to be over-ridden. In very rare circumstances where over-riding this functionality is required, you can do so by creating your own listener for the ",(0,n.jsx)(t.code,{children:"smrtzr:broadcast:callToAction_shopify"})," event, using the following code as an example:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"  <script>\n    if (!window.smrtzrListenersOverride) {\n      window.smrtzrListenersOverride = {};\n    }\n    window.smrtzrListenersOverride.broadcastCallToAction = true;\n    document.addEventListener('smrtzr:broadcast:callToAction_shopify', (e) => {\n      // Event contains the productId that was added to the cart as the cta property\n      const { cta } = e.detail;\n      addToOtherCartPlugin(cta);\n    });\n  <\/script>\n"})}),"\n",(0,n.jsx)(t.h3,{id:"cart-ui",children:"Cart UI"}),"\n",(0,n.jsx)(t.p,{children:"Depending on your store theme, after a successful add to cart API request, the Cart UI elements may not reflect the change, for example until the user refreshes the page. We try to make our code work for as many of the default shopify themes as possible, and expect it to work for others that are built to standard, but due to number of possible themes and ways each theme handles cart interactions, it is impossible to make this work out of the box every time. We can provide guidance on how to update the cart UI after an add to cart action if you are experiencing issues."}),"\n",(0,n.jsxs)(t.p,{children:["If you would like to update the UI after an add to cart action, you can create your own ",(0,n.jsx)(t.code,{children:"smrtzr:broadcast:callToActionSuccess_shopify"})," listener using the following code as an example:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"  <script>\n    if (!window.smrtzrListenersOverride) {\n      window.smrtzrListenersOverride = {};\n    }\n    window.smrtzrListenersOverride.broadcastCallToActionNotifier = true;\n    document.addEventListener('smrtzr:broadcast:callToActionSuccess_shopify', (e) => {\n      // Event contains the productId that was added to the cart as the cta property\n      // it also contains the Cart API response as the response property, this can contain\n      // the full cart object, as well as the cart UI elements that need to be updated\n      const { cta, response } = e.detail;\n\n      updateCartUiByProductId(cta, response);\n    });\n  <\/script>\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var n=r(6540);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);